@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --font-inter: 'Inter', sans-serif;
}

/* Smooth scrolling */
html {
  scroll-behavior: smooth;
}

/* Custom glassmorphism utilities */
@layer utilities {
  .glass {
    @apply backdrop-blur-md bg-white/10 border border-white/20;
  }
  
  .glass-dark {
    @apply backdrop-blur-md bg-white/5 border border-white/10;
  }
  
  .glassmorphism {
    @apply backdrop-blur-md bg-white/10 border border-white/20;
    -webkit-backdrop-filter: blur(16px);
    backdrop-filter: blur(16px);
  }

  .task-card {
    min-height: 240px;
  }
  
  .shadow-glow {
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.1);
  }
  
  .shadow-glow-orange {
    box-shadow: 0 0 20px rgba(249, 115, 22, 0.3);
  }
  
  .shadow-glow-teal {
    box-shadow: 0 0 20px rgba(20, 184, 166, 0.3);
  }
}

/* Enhanced focus styles for accessibility */
@layer base {
  *:focus {
    @apply outline-none ring-2 ring-offset-2 ring-orange-400 ring-offset-transparent;
  }
  
  button:focus,
  input:focus,
  textarea:focus,
  select:focus {
    @apply ring-2 ring-orange-400;
  }
}

/* Smooth animations for all interactive elements */
@layer components {
  .interactive {
    @apply transition-all duration-300 ease-out;
  }
  
  .card-hover {
    @apply hover:scale-[1.02] hover:-translate-y-1 transition-all duration-300;
  }
  
  .button-primary {
    @apply px-6 py-3 bg-gradient-to-r from-orange-500 to-orange-600 text-white rounded-full 
           hover:scale-105 transition-all duration-300 shadow-lg hover:shadow-orange-500/25 
           focus:outline-none focus:ring-2 focus:ring-orange-300 font-medium;
  }
  
  .button-secondary {
    @apply px-6 py-3 backdrop-blur-md border transition-all duration-300 hover:scale-105
           focus:outline-none focus:ring-2 focus:ring-white/30 rounded-full font-medium;
  }
}

/* Custom scrollbar styling */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.1);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb {
  background: rgba(255, 255, 255, 0.3);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(255, 255, 255, 0.5);
}

/* Remove default focus rings and add custom ones */
button, input, textarea, select {
  @apply focus:outline-none;
}

/* Ensure proper contrast for text */
.text-contrast {
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

/* Glassmorphism gradient backgrounds */
.glass-gradient {
  background: linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(20,184,166,0.1) 50%, rgba(255,255,255,0.1) 100%);
}

.glass-gradient-dark {
  background: linear-gradient(135deg, rgba(255,255,255,0.05) 0%, rgba(20,184,166,0.08) 50%, rgba(255,255,255,0.05) 100%);
}

/* Loading animation */
@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

.shimmer {
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}
/* ===== GLASSMORPHISM TASK CARDS STYLES ===== */

/* Glassmorphism utilities */
.glassmorphism {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
}

.glassmorphism-card {
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

/* Smooth transitions for task cards */
.task-card * {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Focus states for accessibility */
.task-card button:focus-visible {
  outline: 2px solid rgba(255, 255, 255, 0.8);
  outline-offset: 2px;
}

/* Checkbox animation */
@keyframes checkmark {
  0% { transform: scale(0) rotate(45deg); opacity: 0; }
  50% { transform: scale(1.2) rotate(45deg); opacity: 0.8; }
  100% { transform: scale(1) rotate(45deg); opacity: 1; }
}

.checkmark-animation {
  animation: checkmark 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* Hover glow effects */
.hover-glow:hover {
  box-shadow: 0 0 20px rgba(255, 255, 255, 0.2), 
              0 0 40px rgba(255, 255, 255, 0.1),
              0 8px 32px rgba(0, 0, 0, 0.1);
} 

/* Add this to your global CSS file or create a new CSS module */

.modal-input-text {
  color: #333333 !important;
}

/* Or using CSS custom properties for better maintainability */
:root {
  --modal-input-text-color: #333333;
}

.modal-input-text {
  color: var(--modal-input-text-color);
}

/* For better contrast, you might also want to adjust placeholder color */
.modal-input-text::placeholder {
  color: rgba(51, 51, 51, 0.6); /* #333333 with 60% opacity */
}